<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hzit.dao.mapper.CommentMapper">

    <sql id="commentBaseColumnSql">
        c_id,
        c_uuid,
        c_time,
        c_people,
        c_count,
        c_module,
        c_score,
        cd_people
    </sql>

    <sql id="commentBaseWhereSql">
        <if test="map!=null">
            <where>
                <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(map.cId)">
                    c_id = #{map.cId}
                </if>
                <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(map.cUuid)">
                    AND c_uuid = #{map.cUuid}
                </if>
                <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(map.cTime)">
                    AND c_time = #{map.cTime}
                </if>
                <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(map.cPeople)">
                    AND c_people = #{map.cPeople}
                </if>
                <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(map.cCount)">
                    AND c_count= #{map.cCount}
                </if>
                <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(map.cModule)">
                    AND c_module = #{map.cModule}
                </if>
                <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(map.cScore)">
                    AND c_score = #{map.cScore}
                </if>
                <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(map.cScore)">
                    AND cd_people = #{map.cdPeople}
                </if>
            </where>
        </if>
    </sql>

    <insert id="insertComment" parameterType="com.hzit.dao.entity.Comment">
        INSERT INTO comment(
        <include refid="commentBaseColumnSql"/>
        )VALUES(
            #{cId},
            #{cUuid},
            sysdate(),
            #{cPeople},
            #{cCount},
            #{cModule},
            #{cScore},
            #{cdPeople}
        )
    </insert>

    
    <delete id="deleteCommentByCId" parameterType="Integer">
        DELETE FROM comment WHERE c_id = #{cId}
    </delete>

    <update id="updateComment" parameterType="com.hzit.dao.entity.Comment">
        UPDATE comment
        <set>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(cUuid)">
                c_uuid = #{cUuid} ,
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(cTime)">
                c_time = #{cTime} ,
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(cPeople)">
                c_people = #{cPeople} ,
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(cCount)">
                c_count = #{cCount} ,
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(cModule)">
                c_module = #{cModule} ,
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(cScore)">
                c_score = #{cScore} ,
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(cScore)">
                cd_people = #{cdPeople} ,
            </if>
        </set>
        WHERE c_id = #{cId}
    </update>

    <select id="searchCommentByParams" parameterType="map" resultMap="commentMap">
        SELECT
        <include refid="commentBaseColumnSql"/>
        FROM comment
        <include refid="commentBaseWhereSql"/>
        ORDER BY cd_people
    </select>
    <select id="findCommentByParams" parameterType="java.lang.String" resultMap="commentMap">
        SELECT * FROM COMMENT WHERE  cd_people LIKE CONCAT('%',#{cdPeople},'%') and c_module = #{cModule}
    </select>
    <select id="findPeopleCount" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT COUNT(c_people) FROM `comment` WHERE c_people=#{cPeople}
    </select>
    <select id="searchCommentBycModule" parameterType="java.lang.String" resultMap="commentMap">
      select * from (SELECT AVG(c_score) c_score,cd_people,DATE_FORMAT(c_time,'%c') c_time,DATE_FORMAT(c_time,'%y') c_id ,DATE_FORMAT(c_time,'%y%c') haha
      FROM COMMENT WHERE c_module=#{cModule} GROUP BY cd_people,haha) l where haha=DATE_FORMAT(#{ymTime},'%y%c')
    </select>
    <select id="searchCommentByName" parameterType="java.lang.String" resultMap="commentMap">
        select * from  comment where cd_people = #{cdPeople}
    </select>
    <resultMap type="com.hzit.dao.entity.Comment" id="commentMap">
        <id column="c_id" property="cId"/>
        <result column="c_uuid" property="cUuid"/>
        <result column="c_time" property="cTime"/>
        <result column="c_people" property="cPeople"/>
        <result column="c_count" property="cCount"/>
        <result column="c_module" property="cModule"/>
        <result column="c_score" property="cScore"/>
        <result column="cd_people" property="cdPeople"/>
    </resultMap>

</mapper>
