<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hzit.dao.mapper.DiscussMapper">

    <sql id="discussBaseColumnSql">
        d_id,
        c_uuid,
        v_id,
        p_id,
        d_result
    </sql>

    <sql id="discussBaseWhereSql">
        <if test="map!=null">
            <where>
                <if test="map.dId!=null">
                    d_id = #{map.dId}
                </if>
                <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(map.cUuid)">
                    AND c_uuid = #{map.cUuid}
                </if>
                <if test="map.vId!=null">
                    AND v_id = #{map.vId}
                </if>
                <if test="map.pId!=null">
                    AND p_id = #{map.pId}
                </if>
                <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(map.dResult)">
                    AND d_result = #{map.dResult}
                </if>
            </where>
        </if>
    </sql>

    <insert id="insertDiscuss" parameterType="com.hzit.dao.entity.Discuss">
        INSERT INTO discuss(
        <include refid="discussBaseColumnSql"/>
        )VALUES(
            #{dId},
            #{cUuid},
            #{vId},
            #{pId},
            #{dResult}
        )
    </insert>

    
    <delete id="deleteDiscussByDId" parameterType="Integer">
        DELETE FROM discuss WHERE d_id = #{dId}
    </delete>

    <update id="updateDiscuss" parameterType="com.hzit.dao.entity.Discuss">
        UPDATE discuss
        <set>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(cUuid)">
                c_uuid = #{cUuid} ,
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(vId)">
                v_id = #{vId} ,
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(pId)">
                p_id = #{pId} ,
            </if>
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(dResult)">
                d_result = #{dResult} ,
            </if>
        </set>
        WHERE d_id = #{dId}
    </update>

    <select id="searchDiscussByParams" parameterType="map" resultMap="discussMap">
        SELECT
        <include refid="discussBaseColumnSql"/>
        FROM discuss
        <include refid="discussBaseWhereSql"/>
    </select>
    <select id="searchDiscussOfPopulation" resultMap="discussMap">
       SELECT * FROM (SELECT COUNT(v_id) p_id,v_id ,d_result  FROM discuss GROUP BY v_id,d_result) l
        WHERE l.d_result='喜欢吃'
        AND l.p_id=(SELECT MAX(次数) FROM(SELECT COUNT(v_id) 次数,v_id,d_result FROM discuss GROUP BY v_id,d_result) h )
    </select>
    <select id="searchDiscussOfNotPopulation" resultMap="discussMap">
      SELECT * FROM (SELECT COUNT(v_id) p_id,v_id ,d_result  FROM discuss GROUP BY v_id,d_result) l
        WHERE l.d_result='不喜欢吃'
        AND l.p_id=(SELECT MAX(次数) FROM(SELECT COUNT(v_id) 次数,v_id,d_result FROM discuss GROUP BY v_id,d_result) h )
    </select>
    <select id="searchDiscussOfNormalPopulation" resultMap="discussMap">
        SELECT * FROM (SELECT COUNT(v_id) p_id,v_id ,d_result  FROM discuss GROUP BY v_id,d_result) l
        WHERE l.p_id>0
        AND l.p_id &lt; (SELECT MAX(次数) FROM(SELECT COUNT(v_id) 次数,v_id,d_result FROM discuss GROUP BY v_id,d_result) h )
    </select>
    <resultMap type="com.hzit.dao.entity.Discuss" id="discussMap">
        <id column="d_id" property="dId"/>
        <result column="c_uuid" property="cUuid"/>
        <result column="v_id" property="vId"/>
        <result column="p_id" property="pId"/>
        <result column="d_result" property="dResult"/>
    </resultMap>

</mapper>
